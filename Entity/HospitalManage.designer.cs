#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HospitalManage")]
	public partial class HospitalManageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertPatientDT(PatientDT instance);
    partial void UpdatePatientDT(PatientDT instance);
    partial void DeletePatientDT(PatientDT instance);
    partial void InsertHospitalDT(HospitalDT instance);
    partial void UpdateHospitalDT(HospitalDT instance);
    partial void DeleteHospitalDT(HospitalDT instance);
    partial void InsertMedicineDT(MedicineDT instance);
    partial void UpdateMedicineDT(MedicineDT instance);
    partial void DeleteMedicineDT(MedicineDT instance);
    #endregion
		
		public HospitalManageDataContext() : 
				base(global::Entity.Properties.Settings.Default.HospitalManageConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalManageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalManageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalManageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HospitalManageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PatientDT> PatientDT
		{
			get
			{
				return this.GetTable<PatientDT>();
			}
		}
		
		public System.Data.Linq.Table<HospitalDT> HospitalDT
		{
			get
			{
				return this.GetTable<HospitalDT>();
			}
		}
		
		public System.Data.Linq.Table<MedicineDT> MedicineDT
		{
			get
			{
				return this.GetTable<MedicineDT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientDT")]
	public partial class PatientDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _patId;
		
		private string _patName;
		
		private int _patAge;
		
		private string _patSex;
		
		private string _patPlace;
		
		private decimal _notPaid;
		
		private System.Nullable<int> _patDocId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatIdChanging(string value);
    partial void OnpatIdChanged();
    partial void OnpatNameChanging(string value);
    partial void OnpatNameChanged();
    partial void OnpatAgeChanging(int value);
    partial void OnpatAgeChanged();
    partial void OnpatSexChanging(string value);
    partial void OnpatSexChanged();
    partial void OnpatPlaceChanging(string value);
    partial void OnpatPlaceChanged();
    partial void OnnotPaidChanging(decimal value);
    partial void OnnotPaidChanged();
    partial void OnpatDocIdChanging(System.Nullable<int> value);
    partial void OnpatDocIdChanged();
    #endregion
		
		public PatientDT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patId", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string patId
		{
			get
			{
				return this._patId;
			}
			set
			{
				if ((this._patId != value))
				{
					this.OnpatIdChanging(value);
					this.SendPropertyChanging();
					this._patId = value;
					this.SendPropertyChanged("patId");
					this.OnpatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string patName
		{
			get
			{
				return this._patName;
			}
			set
			{
				if ((this._patName != value))
				{
					this.OnpatNameChanging(value);
					this.SendPropertyChanging();
					this._patName = value;
					this.SendPropertyChanged("patName");
					this.OnpatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patAge", DbType="Int NOT NULL")]
		public int patAge
		{
			get
			{
				return this._patAge;
			}
			set
			{
				if ((this._patAge != value))
				{
					this.OnpatAgeChanging(value);
					this.SendPropertyChanging();
					this._patAge = value;
					this.SendPropertyChanged("patAge");
					this.OnpatAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patSex", DbType="Char(2)")]
		public string patSex
		{
			get
			{
				return this._patSex;
			}
			set
			{
				if ((this._patSex != value))
				{
					this.OnpatSexChanging(value);
					this.SendPropertyChanging();
					this._patSex = value;
					this.SendPropertyChanged("patSex");
					this.OnpatSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patPlace", DbType="NVarChar(200)")]
		public string patPlace
		{
			get
			{
				return this._patPlace;
			}
			set
			{
				if ((this._patPlace != value))
				{
					this.OnpatPlaceChanging(value);
					this.SendPropertyChanging();
					this._patPlace = value;
					this.SendPropertyChanged("patPlace");
					this.OnpatPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notPaid", DbType="Decimal(18,0) NOT NULL")]
		public decimal notPaid
		{
			get
			{
				return this._notPaid;
			}
			set
			{
				if ((this._notPaid != value))
				{
					this.OnnotPaidChanging(value);
					this.SendPropertyChanging();
					this._notPaid = value;
					this.SendPropertyChanged("notPaid");
					this.OnnotPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patDocId", DbType="Int")]
		public System.Nullable<int> patDocId
		{
			get
			{
				return this._patDocId;
			}
			set
			{
				if ((this._patDocId != value))
				{
					this.OnpatDocIdChanging(value);
					this.SendPropertyChanging();
					this._patDocId = value;
					this.SendPropertyChanged("patDocId");
					this.OnpatDocIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalDT")]
	public partial class HospitalDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hosId;
		
		private string _hosName;
		
		private string _hosRoom;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhosIdChanging(int value);
    partial void OnhosIdChanged();
    partial void OnhosNameChanging(string value);
    partial void OnhosNameChanged();
    partial void OnhosRoomChanging(string value);
    partial void OnhosRoomChanged();
    #endregion
		
		public HospitalDT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hosId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hosId
		{
			get
			{
				return this._hosId;
			}
			set
			{
				if ((this._hosId != value))
				{
					this.OnhosIdChanging(value);
					this.SendPropertyChanging();
					this._hosId = value;
					this.SendPropertyChanged("hosId");
					this.OnhosIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hosName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hosName
		{
			get
			{
				return this._hosName;
			}
			set
			{
				if ((this._hosName != value))
				{
					this.OnhosNameChanging(value);
					this.SendPropertyChanging();
					this._hosName = value;
					this.SendPropertyChanged("hosName");
					this.OnhosNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hosRoom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hosRoom
		{
			get
			{
				return this._hosRoom;
			}
			set
			{
				if ((this._hosRoom != value))
				{
					this.OnhosRoomChanging(value);
					this.SendPropertyChanging();
					this._hosRoom = value;
					this.SendPropertyChanged("hosRoom");
					this.OnhosRoomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineDT")]
	public partial class MedicineDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _medId;
		
		private string _medName;
		
		private decimal _medPrice;
		
		private int _medCount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmedIdChanging(int value);
    partial void OnmedIdChanged();
    partial void OnmedNameChanging(string value);
    partial void OnmedNameChanged();
    partial void OnmedPriceChanging(decimal value);
    partial void OnmedPriceChanged();
    partial void OnmedCountChanging(int value);
    partial void OnmedCountChanged();
    #endregion
		
		public MedicineDT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medId
		{
			get
			{
				return this._medId;
			}
			set
			{
				if ((this._medId != value))
				{
					this.OnmedIdChanging(value);
					this.SendPropertyChanging();
					this._medId = value;
					this.SendPropertyChanged("medId");
					this.OnmedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string medName
		{
			get
			{
				return this._medName;
			}
			set
			{
				if ((this._medName != value))
				{
					this.OnmedNameChanging(value);
					this.SendPropertyChanging();
					this._medName = value;
					this.SendPropertyChanged("medName");
					this.OnmedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal medPrice
		{
			get
			{
				return this._medPrice;
			}
			set
			{
				if ((this._medPrice != value))
				{
					this.OnmedPriceChanging(value);
					this.SendPropertyChanging();
					this._medPrice = value;
					this.SendPropertyChanged("medPrice");
					this.OnmedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medCount", DbType="Int NOT NULL")]
		public int medCount
		{
			get
			{
				return this._medCount;
			}
			set
			{
				if ((this._medCount != value))
				{
					this.OnmedCountChanging(value);
					this.SendPropertyChanging();
					this._medCount = value;
					this.SendPropertyChanged("medCount");
					this.OnmedCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
